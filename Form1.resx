<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="motelPictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAlgCWAAD/4QCORXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAABJADAAIAAAAUAAAAXJAEAAIAAAAUAAAAcJKRAAIAAAADNzAAAJKSAAIAAAADNzAAAAAA
        AAAyMDIwOjAyOjE2IDIyOjI0OjI3ADIwMjA6MDI6MTYgMjI6MjQ6MjcAAAD/2wBDAAYEBQYFBAYGBQYH
        BwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcH
        BwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo
        KCj/wAARCACMAOYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5bpynBqUx+1M2V08r
        RjzJkyHIqWM9arJlTVhGz2raDMpIkoyKTOO1NxurRsiw7rS0IuBTs4ppCBRSihTS1SQhhFFSDmkbiiwE
        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
        KYH/2Q==
</value>
  </data>
</root>